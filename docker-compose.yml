version: '4.2.0'

services:
  app:
    build: 
      context: .
      dockerfile: dockerFile
    restart: always
    env_file:
      - .env
    ports:
      - ${PORT}:3000
    depends_on:
      - psql
    volumes:
      - .:/app
    networks:
      - app
    command: ["npm", "run","start:dev"]

  migration:
    build:
      context: .
      dockerfile: dockerFile
    restart: "no"
    command: sh -c "npm run migrate:create && npm run migrate:up"
    profiles:
      - migration
    networks:
      - app
    depends_on:
      - psql
    volumes:
      - .:/app
  seed:
    build:
      context: .
      dockerfile: dockerFile
    profiles:
      - seed
    restart: "no"
    command: "npm run seed"
    networks:
      - app
    depends_on:
      - psql
    volumes:
      - .:/app

      
  psql:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_DB=${PG_NAME}
    ports:
      - ${PG_PORT}:5432
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - app

  adminer:
    image: adminer
    restart: always
    depends_on:
      - psql
    environment:
      ADMINER_DEFAULT_SERVER: psql
    ports:
      - 8080:8080
    networks:
      - app
  


  redis:
    image: redis
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - app
    volumes:
      - db:/data

volumes:
  app:
  db:

networks:
  app:
    driver: bridge




